max_attempts: 4
feedback_type: rich

# 初始化提示模板 - 使用与代码提取逻辑一致的格式
init_prompt: |
  AIM: You need to assist me with a Python package development task. Basing your decisions on the provided requirements and existing code, implement the missing pieces within the file_code.

  ## Provided File Code:
  {file_code_placeholder}

  ## Problem Requirements:
  {query_placeholder}

  Your task:
  1. Identify incomplete or incorrect implementations within the file_code.
  2. Correctly implement the missing or erroneous parts without altering unmodified sections.
  3. Ensure the output includes only the exact files listed in the **Provided File Code** section and follows the format below.
  4. Return the entire set of file_code with necessary corrections.
  
  ## STRICT OUTPUT FORMAT:
  Answer: 
  @ {relative_path/filename_1}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```
  @ {relative_path/filename_2}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```
  @ {relative_path/filename_3}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```


# 反馈提示模板 - 包含完整代码上下文和返回格式
feedback_prompt: |
  AIM: Analyze and provide feedback for the proposed solution, then return the corrected file_code.

  ## Problem Requirements:
  {query_placeholder}

  ## Provided File Code:
  {file_code_placeholder}

  ## Proposed Solution:
  {solution_placeholder}


  Your task:
  1. Analyze the correctness and completeness of the provided solution. Note any issues or improvements needed.
  2. Implement the required corrections to the file_code sections while keeping all other code unchanged.
  3. Ensure the output includes only the exact files listed in the **Provided File Code** section and follows the format below.
  4. Return a fully corrected set of file_code.


  ## STRICT OUTPUT FORMAT:
  Feedback:
  [Feedback content here]

  Improved Answer:
  @ {relative_path/filename_1}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```
  @ {relative_path/filename_2}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```
  @ {relative_path/filename_3}
  ```python
  [COMPLETE file code including ALL original code plus your implementations]
  ```